from django.shortcuts import render
from django.http import HttpResponse, HttpResponseRedirect
from django.views.decorators.csrf import csrf_exempt
from .models import accident, authority
from django.core import serializers
import json
from django import forms
from django.utils import timezone
from . import utils
from django.core.mail import send_mail
from django.conf import settings



# Create your views here.
@csrf_exempt
def entry(request):
    if request.method != "POST":
        return HttpResponse("POST expected")
     
    print("_______________________________________")
    print("Accident data received ")
    try:
        obj = accident()
        ID = request.POST['id']
        latitude = request.POST['latitude']
        longitude = request.POST['longitude']
        time = request.POST['time']
        speed = request.POST['speed']
        vehicleInfo = request.POST['vehicleinfo']

        accX = request.POST['accX']
        accY = request.POST['accY']
        accZ = request.POST['accZ']
        
        rotX = request.POST['rotX']
        rotY = request.POST['rotY']
        rotZ = request.POST['rotZ']
        pincode = request.POST['pincode']

        obj.uid = ID
        obj.latitude = float(latitude)
        obj.longitude = float(longitude)
        obj.speed = int(speed)
        obj.time = timezone.now()
        obj.vehicleinfo = vehicleInfo
        obj.pincode = pincode
        # obj.deviceinfo

        obj.accelerometerX = '-1.715,5.163,-0.38,0.474,4.634,1.608,1.385,-0.359,4.739,-2.813,3.484,5.801,6.49,0.905,6.601,6.505,-2.238,-0.255,7.347,6.312,2.788,0.098,5.014,3.582,2.04,7.593,6.531,-0.98,2.484,0.026,-0.016,-0.171,3.868,0.681,2.575,3.986,4.126,3.748,2.998,0.18,4.349,5.524,-1.569,0.708,6.108,6.187,-2.437,0.825,-0.023,0.628,1.756,4.273,-0.967,1.922,5.152,0.828,-0.654,-0.681,3.437,-4.598,-2.387,1.566,-0.035,0.113,-1.374,-7.065,-6.306,2.01,-4.357,1.145,-7.043,-4.028,-0.568,-4.088,-1.161,-5.275,-6.046,-5.564,-2.11,-0.393,-3.502,-6.364,-4.208,-3.746,-6.461,-2.452,-5.812,-10.829,-8.829,-1.583,-10.727,-2.254,-5.146,-7.781,-4.283,-10.919,-7.761,-7.285,-8.89,-8.128,-4.844,-4.435,-10.624,-1.416,-3.991,-2.447,-4.432,-4.474,-1.511,-4.032,-4.074,-6.546,-5.935,-7.345,-3.769,-1.151,-1.953,-4.512,-3.476,-1.205,-0.665,3.103,-0.296,-1.098,6.234,0.891,10.589,9.593,4.744,4.67,12.312,12.714,11.329,11.548,12.46,23.233,18.363,23.698,26.43,28.244,33.744,34.241,41.589,51.813,61.184,69.877,83.213,93.022,97.796,76.815,3.172,-77.257,-95.145,-91.457,-77.423,-69.686,-55.659,-53.919,-42.045,-42.26,-30.125,-28.476,-31.02,-19.804,-25.863,-15.306,-18.152,-12.571,-16.404,-8.181,-8.004,-13.408,-7.088,-10.015,-6.141,-1.501,-6.877,-3.776,-3.002,3.062,-3.996,-4.659,0.904,1.747,-0.335,2.998,7.188,7.653,5.026,-1.145,0.085,3.242,3.269,7.334,0.706,5.761,3.959,10.743,2.069,4.367,6.13,3.142,11.257,9.321,6.113,3.757,7.209,2.518,2.681,6.998,7.184,1.993,9.321,4.474,6.967,5.517,2.714,8.357,2.565,4.768,9.817,3.484,1.326,7.949,1.538,1.761,7.844,4.342,4.088,1.95,7.152,7.485,6.247,6.865,-1.879,4.54,-0.713,0.161,1.817,-1.049,4.57,-0.224,2.134,3.942,-2.85,-1.534,4.09,-3.446,0.22,2.074,-4.129,2.919,-0.277,-0.455,-5.929,-0.248,-3.756,0.492,-0.776,-0.133,-6.351,-5.722,-4.348,-3.062,-4.266,-2.22,-1.188,-3.432,-4.44,-3.684,-2.094,-4.112,0.826,-3.575,-7.456,-2.092,-5.303,-2.588,-0.132,-4.76,-1.571,-4.717,2.118,1.0,-7.448,-1.854,-5.231,-2.509,-3.258,-1.285,-5.935,0.74,1.694,-2.216,-5.958,-3.015,0.53,3.515,-0.837,3.247,-4.734'
        obj.rotationX = '20,-20,0.121,-1.959,0.017,-0.412,0.939,-1.207,-0.833,2.432,2.344,-0.111,-1.155,-2.324,1.472,-1.368,-1.984,-2.497,-2.37,0.5,-1.298,1.973,0.983,1.329,-0.405,-1.278,1.561,2.334,-2.396,-2.454,-0.247,-1.467,2.286,1.085,-1.142,0.63,0.527,-0.215,1.187,-1.619,-0.896,-0.402,-2.146,-2.231,-1.082,-0.451,0.115,2.444,1.611,-2.395,2.389,1.17,1.419,1.752,0.014,-0.729,0.353,2.39,-1.479,-1.373,-2.42,-1.675,0.181,1.641,2.312,2.441,-0.589,-1.174,-1.493,1.132,-1.037,1.912,-2.182,1.558,0.53,0.653,0.495,0.829,-0.368,-0.378,-0.051,0.138,-0.547,1.266,0.077,-2.341,2.434,0.816,-0.135,1.574,2.293,-2.378,-1.182,0.581,0.781,-1.107,1.948,1.187,-2.108,-2.099,-2.252,-2.27,-1.611,1.272,1.801,-2.302,-1.745,1.421,-2.462,-0.241,-1.863,-0.857,1.93,1.748,0.074,1.951,-0.61,0.241,-2.408,-2.275,1.268,-0.902,0.221,1.267,-2.192,-1.7,-0.724,-1.741,2.236,2.379,-1.546,0.591,-1.546,-0.873,-1.375,1.551,1.408,-2.317,-1.542,2.034,2.035,1.48,-0.33,0.309,1.878,-0.708,1.383,0.475,0.743,-1.149,0.468,0.879,1.553,-2.398,-2.043,-1.708,-0.676,-0.154,0.026,-1.248,-0.954,1.377,1.222,-1.685,1.621,2.249,-1.318,-1.267,-0.925,1.752,1.625,1.856,0.02,-1.427,-0.128,-2.361,-1.07,2.1,1.941,0.88,0.854,1.102,2.201,2.334,0.586,0.282,1.935,-1.412,-0.598,-1.009,0.647,0.146,1.649,-1.061,-2.186,-0.891,1.332,-1.921,1.379,1.198,1.912,-1.123,1.332,0.459,2.412,-2.017,-0.812,0.069,-1.999,1.202,2.265,-0.962,-1.823,-1.539,-0.86,-0.279,-1.97,1.117,1.013,0.9,-0.13,1.64,-0.251,0.819,-1.158,0.551,0.693,-0.284,2.395,2.228,0.215,-0.231,-0.507,-0.578,1.973,-0.559,-1.655,-1.288,-0.018,-0.111,1.387,2.296,0.208,-2.005,2.259,1.545,2.004,0.705,-2.361,-2.323,-1.779,2.046,0.506,-1.325,0.332,0.777,1.489,0.89,-0.223,-2.001,1.371,-0.345,0.386,-2.399,1.654,2.059,-1.381,0.575,-2.331,-0.956,0.44,1.998,2.282,2.37,-0.004,0.921,-1.193,-0.807,-2.334,-1.23,2.429,-2.205,-1.247,1.963,1.766,-1.747,1.426,-0.885,0.271,-1.957,-2.253,-2.341,1.023,-1.979,-1.231,-0.131,2.082,-1.652,1.643,-0.224,1.91'
        obj.accelerometerY = '20,-20,-0.848,-0.716,-0.122,-0.076,-0.336,0.435,0.255,-0.301,0.375,-0.422,0.477,0.723,-0.325,0.026,-0.054,-0.582,-0.454,0.045,0.595,0.3,-0.284,-0.277,0.164,-0.014,-0.437,0.742,-0.244,-0.166,0.037,-0.908,0.082,0.041,0.014,-0.41,-0.956,-0.406,0.025,0.192,0.672,-0.69,-0.966,0.856,-0.894,0.592,0.474,0.44,-0.158,-0.693,-0.223,0.288,-0.731,-0.221,0.499,0.947,0.047,0.457,-0.83,0.903,0.255,0.659,0.8,-0.039,0.593,0.121,-0.949,-0.059,0.742,-0.17,0.833,0.439,0.965,-0.892,0.511,0.5,0.332,-0.623,0.508,-0.952,-0.441,0.271,-0.94,0.918,0.223,-0.78,0.212,-0.39,-0.831,0.48,0.843,0.677,-0.435,0.682,-0.593,-0.859,-0.027,0.416,-0.494,-0.037,-0.548,0.035,0.626,0.139,-0.572,-0.587,0.892,0.127,-0.938,-0.847,-0.732,0.84,-0.519,-0.264,0.799,-0.442,0.718,0.127,0.507,0.528,-0.624,0.34,0.537,0.618,0.966,0.282,-0.237,0.507,-0.879,0.237,-0.286,-0.534,-0.91,0.51,-0.719,0.383,0.244,-0.231,0.538,0.405,-0.052,0.557,0.421,0.657,0.33,-0.506,0.558,-2.383,1.851,9.096,0.073,13.582,2.789,-1.681,1.033,0.335,-0.17,-0.941,0.649,-0.916,-0.449,0.578,0.136,-0.604,-0.936,-0.318,0.505,-0.6,0.649,-0.978,-0.804,0.014,0.349,-0.104,-0.498,0.417,-0.747,0.74,0.845,-0.257,0.376,-0.51,-0.248,-0.323,0.604,0.328,0.851,-0.613,0.818,-0.587,-0.123,-0.585,0.782,0.48,0.912,0.596,0.429,0.719,0.04,0.311,-0.989,0.681,-0.064,-0.471,-0.667,0.454,0.573,-0.338,0.013,0.342,-0.337,-0.751,0.038,0.661,-0.565,-0.225,-0.657,0.736,-0.314,-0.573,0.043,0.882,-0.061,0.601,-0.812,0.369,0.798,-0.88,0.003,0.921,-0.429,-0.605,0.872,-0.288,-0.38,-0.396,0.386,0.748,0.096,-0.067,0.377,-0.389,0.04,-0.964,0.669,-0.963,0.781,-0.894,-0.282,0.93,-0.799,0.806,-0.975,0.515,-0.747,-0.944,-0.312,0.34,0.793,0.055,-0.65,-0.669,0.135,-0.336,-0.021,-0.329,-0.044,-0.257,0.337,0.32,0.242,0.87,0.264,0.735,-0.198,0.866,-0.891,-0.491,0.885,0.852,-0.848,-0.328,-0.031,0.386,-0.17,0.19,0.83,-0.854,-0.94,0.184,-0.204,0.529,0.142,-0.16,-0.869,-0.725,0.788,-0.169,0.948,-0.061,0.06' 
        obj.rotationY = '20,-20,-0.002,-0.077,-0.042,0.025,-0.061,0.059,-0.087,0.089,-0.093,0.091,0.031,-0.048,-0.099,-0.002,0.035,0.062,0.047,0.069,0.057,-0.012,0.087,-0.04,-0.015,-0.005,0.026,0.05,-0.02,-0.066,0.01,-0.083,-0.041,-0.082,0.048,0.021,-0.016,0.028,0.012,0.031,-0.096,-0.012,-0.025,0.055,-0.038,-0.023,-0.023,0.08,0.079,-0.085,-0.006,0.052,0.07,0.099,0.081,0.039,-0.02,-0.067,-0.069,-0.043,0.04,-0.12,0.076,-0.044,0.036,0.016,-0.004,0.076,-0.077,-0.051,0.069,-0.011,0.001,-0.058,-0.077,0.131,-0.002,-0.018,-0.066,0.016,0.008,-0.001,0.054,0.061,-0.021,-0.041,0.002,-0.046,0.004,0.102,-0.105,-0.115,0.051,-0.034,0.158,-0.064,-0.141,-0.107,-0.055,0.054,-0.01,0.058,-0.009,-0.129,0.074,0.06,0.075,-0.029,-0.127,-0.121,-0.072,0.013,0.086,0.23,0.137,0.037,-0.096,-0.152,-0.199,-0.229,-0.119,0.213,0.328,0.401,0.366,0.173,-0.079,-0.256,-0.452,-0.43,-0.543,-0.442,-0.329,-0.009,0.161,0.467,0.851,1.046,1.308,1.578,1.574,1.647,1.646,1.494,1.321,1.257,1.039,0.662,0.484,0.148,0.566,-0.008,0.082,0.111,0.347,0.432,0.742,0.949,0.977,1.133,1.201,1.259,1.128,1.212,0.929,0.831,0.582,0.316,0.096,-0.015,-0.199,-0.448,-0.363,-0.519,-0.25,-0.259,-0.096,0.24,0.255,0.225,0.184,0.169,0.021,-0.141,-0.288,-0.191,-0.026,-0.018,0.096,0.156,0.115,0.051,-0.039,-0.194,-0.063,0.102,0.025,0.051,-0.033,-0.089,-0.091,-0.055,0.014,0.132,-0.03,-0.112,-0.122,-0.044,0.033,0.149,0.05,-0.162,0.063,0.056,-0.02,-0.05,-0.032,-0.092,0.078,-0.019,-0.064,-0.031,-0.054,0.143,0.088,-0.039,0.075,0.054,0.032,-0.033,0.026,0.069,-0.062,-0.022,0.068,0.07,-0.082,0.025,0.055,0.11,0.071,-0.017,-0.043,0.084,0.056,-0.063,0.121,-0.114,-0.046,0.079,-0.064,0.004,0.001,-0.087,-0.018,-0.059,0.075,-0.009,0.076,0.018,-0.09,-0.062,0.039,-0.016,-0.043,-0.095,-0.083,-0.06,-0.042,0.005,-0.034,-0.08,-0.081,0.06,-0.022,-0.054,0.003,0.031,0.08,0.005,-0.049,-0.077,-0.031,0.082,-0.001,0.027,-0.023,0.031,-0.082,0.021,0.069,0.009,-0.105,0.037,0.024,0.0,-0.079,0.032,0.053,-0.029,-0.082'
        obj.accelerometerZ = '20,-20,0.201,0.296,0.837,0.909,-0.696,-0.768,0.938,0.763,0.027,-0.302,0.554,0.71,0.398,-0.117,0.583,-0.368,-0.456,-1.151,-0.17,-0.72,-0.948,-0.563,0.404,0.788,0.004,0.843,-0.005,0.805,-0.328,-0.835,-0.537,0.386,-0.595,0.068,-0.597,0.508,-0.579,0.333,-0.278,0.712,0.195,-0.082,-0.225,-0.323,-0.61,-0.131,-0.856,0.88,-0.009,-1.116,0.211,-0.408,0.95,-0.266,0.598,0.674,0.546,0.988,1.099,0.236,-0.163,0.808,-0.112,-0.496,-0.489,1.016,0.047,-0.88,-0.848,-0.347,-0.083,-0.78,0.21,0.851,0.417,-0.115,-0.488,0.985,-0.252,0.391,0.171,-0.474,0.333,-0.305,-1.066,-0.014,0.253,0.199,-0.243,0.127,-0.33,0.146,1.399,-0.533,-1.255,-1.282,-0.377,1.029,1.156,-0.502,-1.02,-0.166,-1.064,0.992,0.787,0.5,-0.102,-1.212,-1.296,-1.275,1.729,1.045,1.152,1.187,-1.487,-2.369,-2.845,-1.986,0.281,1.572,3.299,3.123,2.087,2.277,0.696,-1.496,-4.301,-4.423,-5.385,-4.773,-2.135,-0.839,1.109,5.992,7.626,10.914,13.418,14.262,15.382,15.966,16.17,16.483,13.645,12.533,10.484,6.239,4.697,2.817,5.239,0.658,-0.344,1.331,4.168,5.084,6.027,9.519,9.306,11.913,12.179,12.097,11.208,10.224,9.43,8.003,5.97,4.944,1.343,-1.165,-1.567,-4.243,-5.055,-3.711,-2.794,-1.408,0.226,0.78,1.736,2.788,1.793,0.677,-0.705,-2.261,-1.572,-2.567,-0.683,1.251,2.117,1.058,1.704,0.118,-1.476,-2.161,-1.381,-0.213,1.223,0.404,-0.646,-0.599,-0.834,-0.423,-0.147,1.161,0.551,0.202,0.171,-0.91,0.739,0.129,0.282,-0.761,-0.816,-0.419,0.571,-0.463,-1.315,0.082,1.11,0.265,0.5,-1.005,-0.342,0.927,-0.161,-0.987,0.498,0.251,1.038,0.209,-0.063,-0.489,0.208,-0.495,-0.905,0.942,0.868,0.098,0.365,0.464,-1.184,-0.093,0.329,-0.551,-0.291,0.577,1.124,-0.07,-0.964,0.639,-0.627,-0.09,0.721,0.735,0.333,-0.369,0.331,0.749,0.325,0.04,-0.867,-0.411,-0.539,-1.041,0.228,-0.379,-0.294,-0.895,0.304,0.766,-0.937,0.777,-0.585,-0.134,-0.054,-0.842,0.419,0.898,0.094,-0.108,0.085,-0.835,-0.532,-0.094,-0.596,0.43,-0.867,-0.893,0.13,0.361,-0.321,0.072,-0.212,-0.754,-0.339,-0.162,0.705,-0.935,0.069,0.146,-0.69' 
        obj.rotationZ = '-0.044,-0.007,0.004,0.062,0.031,-0.017,-0.028,-0.069,-0.037,0.008,-0.05,-0.052,0.02,-0.051,0.012,-0.054,-0.028,0.015,0.056,0.021,-0.065,0.077,0.013,0.017,0.04,-0.052,0.075,0.05,0.048,-0.036,-0.071,0.006,0.012,0.061,-0.0,-0.047,0.025,-0.063,0.026,0.027,-0.006,0.04,0.042,-0.026,0.034,0.036,-0.057,-0.017,-0.009,0.095,0.08,-0.063,0.083,-0.083,-0.057,-0.031,0.015,0.071,0.065,0.06,0.007,-0.098,0.051,-0.021,-0.057,0.106,-0.117,-0.029,0.017,0.072,-0.037,0.098,-0.038,0.069,-0.115,-0.044,0.012,-0.056,-0.05,-0.109,-0.104,0.094,0.015,0.033,0.088,0.091,0.008,-0.058,-0.015,0.115,0.042,-0.167,0.107,-0.078,-0.022,0.008,-0.168,-0.011,-0.043,0.059,-0.061,0.032,0.131,0.028,-0.215,-0.058,-0.203,-0.002,-0.114,-0.153,0.117,0.102,0.01,-0.04,0.257,0.187,-0.131,-0.119,0.242,0.233,0.305,0.289,0.262,0.137,-0.235,0.317,0.06,-0.204,0.063,-0.08,0.216,-0.406,0.439,-0.104,-0.568,0.292,-0.01,-0.661,0.168,-0.76,0.365,-0.099,-1.141,-0.943,-0.389,-1.513,-0.183,1.372,1.429,0.35,-0.0,-0.739,0.901,-2.258,-1.616,-0.983,0.493,-0.735,0.177,-0.389,0.839,0.823,0.382,0.447,0.435,0.321,0.433,-0.462,0.498,0.068,-0.256,-0.398,-0.318,-0.424,0.217,-0.255,-0.103,0.247,-0.28,0.249,-0.154,0.024,-0.24,-0.246,-0.037,-0.264,-0.072,-0.092,0.217,-0.253,-0.199,0.2,0.225,0.186,-0.134,0.184,-0.04,-0.045,-0.166,0.069,0.03,0.196,0.047,0.042,-0.118,-0.041,-0.175,-0.151,0.165,-0.055,-0.017,-0.025,-0.099,0.106,-0.117,0.143,-0.009,-0.09,-0.097,-0.138,-0.003,0.079,0.065,0.087,-0.065,0.015,0.034,-0.085,-0.107,-0.007,0.096,0.017,0.072,-0.063,0.115,-0.023,0.043,-0.078,0.002,-0.008,-0.028,0.077,0.026,0.004,0.054,-0.067,0.09,0.027,-0.017,0.018,-0.071,0.015,-0.094,-0.007,0.089,-0.079,-0.039,0.059,0.042,0.075,0.069,-0.028,-0.018,-0.02,-0.036,0.057,-0.076,0.046,0.025,0.006,0.027,0.052,0.017,-0.059,0.009,0.016,0.048,0.022,0.036,0.027,0.034,0.003,0.013,0.044,0.003,-0.016,-0.054,-0.04,-0.039,-0.033,-0.068,0.057,0.01,0.046,-0.061,-0.061,0.01,-0.033,-0.005,0.026,0.01' 

        obj.save()

        print("ID :",ID)
        print("Coordinates :", latitude, longitude)
        print("Time :", time)
        print("speed :",speed, "km/hr")
        print("pincode :", pincode)
        print()

        hospital, hdist = getNearestAuthority("hospital",latitude,longitude, pincode)
        
        domain = 'http://localhost:8000'
        domain = 'http://ea3cdf1f.ngrok.io'
 # http://ea3cdf1f
        message = "{}, respond to accident at {},{}. more detail at  {}/detail?id={} ".format(hospital, latitude, longitude, domain,  ID )

        sms = "{},accident at {},{}. more detail {}/detail?id={} ".format(str(hospital.name), latitude, longitude, domain ,ID )
        
        print("Nearest Hospital : ", hospital.name)

        print("Sending sms/mail to hospital and Emergency Contacts. ")
       
        print()
        print('more detail at  {}/detail?id={}'.format(domain,  ID) )
        print("_______________________________________")
        # utils.sendSMS("9122371740", sms)
        utils.sendSMS("9122371740", sms)
        # utils.sendSMS("9742506466", sms)
        # SendEmail(['anonymouskmr@gmail.com'], message)
        # sendMail("email", "message")

        
            
        resp = "{}, {}, {}, {}, {}, {} Saved".format(ID, latitude,
            longitude, time, speed, vehicleInfo)
        return HttpResponse(message)

    except Exception as e:
        raise e

    


def detail(request):

    if 'id' in request.GET.keys():

        ID = request.GET['id']
        try:

            accidentData = accident.objects.get(uid=ID)

            data = {}

            data['id'] = ID
            data['lat'] = accidentData.latitude
            data['long'] = accidentData.longitude
            data['time'] = accidentData.time
            data['speed'] = accidentData.speed
            
            data['accX'] = accidentData.accelerometerX
            data['accY'] = accidentData.accelerometerY
            data['accZ'] = accidentData.accelerometerZ

            data['rotX'] = accidentData.rotationX
            data['rotY'] = accidentData.rotationY
            data['rotZ'] = accidentData.rotationZ

            data['vmodel'] = "Suzuki"
            data['vcompany'] = "Maruthi"
            data['vcolor'] = "Black"
            data['vyear'] = "2009"
            



            # TODO
            # return HTTP FILE FROM HERE

            # data = serializers.serialize('json', accidentData)
            # return HttpResponse(data, content_type='application/json')
            return render(request,"activity/detail2.html",data)


        except Exception as e:
            raise e
            return HttpResponse("Given accident data not found" + str(e))  #TODO remove printing of Error message
        


    else:
        return HttpResponse("Enter ID") 


@csrf_exempt
def getAccidentData(request):
    if 'id' in request.GET.keys()  :

        ID = request.GET['id']
        try:
            accidentData = accident.objects.filter(uid=ID)

            data = serializers.serialize('json', accidentData)
            # return HttpResponse(json.dump('{"id":"aaa"}'), content_type='application/json')
            return HttpResponse(data, content_type='application/json')

            # TODO return encoded data from here 

        except Exception as e:
            raise e
        


    else:
        return HttpResponse("Enter ID") 


def getNearestAuthority(type,latitude,longitude, pincode):
    from geopy.distance import geodesic
    
    authorities = authority.objects.filter(authoritytype=type, pincode=pincode)
    # authorities = authority.objects.all()
    print("Found", len(authorities) ,"Hospitals in range.")
    nearestAuth = []
    minDist = 100000000000

    if authorities:
        nearestAuth = authorities[0]
        
    

    # print(Hospitals[0].email)
    for auth in authorities:
        la = auth.latitude
        lo = auth.longitude

        dist = geodesic((latitude, longitude), (la , lo)).km
        print("\t", auth.name[:20], ":", dist,"KM")
        if dist < minDist:
            minDist = dist
            nearestAuth = auth

    return nearestAuth, minDist




def SendEmail(emails,message):    
    subject = 'Test email'
    
    email_from = settings.EMAIL_HOST_USER
    # recipient_list = ['anonymouskmr@gmail.com',]    
    send_mail( subject, message, email_from, emails )    
    # return redirect('redirect to a new page')



